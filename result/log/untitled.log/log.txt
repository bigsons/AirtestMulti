{"tag": "function", "depth": 1, "time": 1757783720.9992168, "data": {"name": "get", "call_args": {"address": "http://tplogin.cn"}, "start_time": 1757783717.4453127, "ret": null, "end_time": 1757783720.9992168}}
{"tag": "function", "depth": 2, "time": 1757783721.1617384, "data": {"name": "_gen_screen_log", "call_args": {"element": {"_parent": "<airtest_selenium.proxy.WebChrome (session=\"1443383808ff5928aeeb6aef67a98a2d\")>", "_id": "BCAC004DB5008DD2E5854728548A6106_element_10", "__class__": "WebElement"}, "filename": null}, "start_time": 1757783721.022002, "ret": {"screen": "C:\\Users\\Administrator\\Desktop\\AppAirtest\\result\\log\\untitled.log\\1757783721.png", "pos": [[578.0, 267.0]]}, "end_time": 1757783721.1617384}}
{"tag": "function", "depth": 1, "time": 1757783721.1617384, "data": {"name": "find_element_by_id", "call_args": {"id": "pwdTipStr"}, "start_time": 1757783720.9992168, "ret": {"_parent": "<airtest_selenium.proxy.WebChrome (session=\"1443383808ff5928aeeb6aef67a98a2d\")>", "_id": "BCAC004DB5008DD2E5854728548A6106_element_10", "res_log": {"screen": "C:\\Users\\Administrator\\Desktop\\AppAirtest\\result\\log\\untitled.log\\1757783721.png", "pos": [[578.0, 267.0]]}, "__class__": "Element"}, "end_time": 1757783721.1617384}}
{"tag": "function", "depth": 2, "time": 1757783721.8911269, "data": {"name": "_gen_screen_log", "call_args": {"element": {"_parent": "<airtest_selenium.proxy.WebChrome (session=\"1443383808ff5928aeeb6aef67a98a2d\")>", "_id": "BCAC004DB5008DD2E5854728548A6106_element_8", "__class__": "WebElement"}, "filename": null}, "start_time": 1757783721.7294703, "ret": {"screen": "C:\\Users\\Administrator\\Desktop\\AppAirtest\\result\\log\\untitled.log\\1757783721.png", "pos": [[649.0, 268.5]]}, "end_time": 1757783721.8911269}}
{"tag": "function", "depth": 1, "time": 1757783721.8911269, "data": {"name": "find_element_by_id", "call_args": {"id": "lgPwd"}, "start_time": 1757783721.7114782, "ret": {"_parent": "<airtest_selenium.proxy.WebChrome (session=\"1443383808ff5928aeeb6aef67a98a2d\")>", "_id": "BCAC004DB5008DD2E5854728548A6106_element_8", "res_log": {"screen": "C:\\Users\\Administrator\\Desktop\\AppAirtest\\result\\log\\untitled.log\\1757783721.png", "pos": [[649.0, 268.5]]}, "__class__": "Element"}, "end_time": 1757783721.8911269}}
{"tag": "info", "depth": 0, "time": 1757783722.4313333, "data": {"name": "\u8bf7\u6c42\u8fd4\u56de\u7684\u6570\u636e", "traceback": null, "log": "{'q': '\u6d4b\u8bd5\u5de5\u7a0b\u5e08\u5c0f\u7ad9', 'p': False, 'g': [{'type': 'sug', 'sa': 's_1', 'q': '\u4e00\u4e2a\u6d4b\u8bd5\u5de5\u7a0b\u5e08'}, {'type': 'sug', 'sa': 's_2', 'q': '\u6d4b\u8bd5\u5f00\u53d1\u5de5\u7a0b\u5e08'}, {'type': 'sug', 'sa': 's_3', 'q': '\u6d4b\u8bd5\u6280\u672f\u5de5\u7a0b\u5e08'}], 'slid': '1536329420958301', 'queryid': '0x7c62fdc7d'}"}}
{"tag": "function", "depth": 2, "time": 1757783722.5913332, "data": {"name": "_gen_screen_log", "call_args": {"element": {"_parent": "<airtest_selenium.proxy.WebChrome (session=\"1443383808ff5928aeeb6aef67a98a2d\")>", "_id": "BCAC004DB5008DD2E5854728548A6106_element_12", "__class__": "WebElement"}, "filename": null}, "start_time": 1757783722.4469626, "ret": {"screen": "C:\\Users\\Administrator\\Desktop\\AppAirtest\\result\\log\\untitled.log\\1757783722.png", "pos": [[624.0, 326.5]]}, "end_time": 1757783722.5913332}}
{"tag": "function", "depth": 1, "time": 1757783722.5913332, "data": {"name": "find_element_by_xpath", "call_args": {"xpath": "//input[@type='button']"}, "start_time": 1757783722.4313333, "ret": {"_parent": "<airtest_selenium.proxy.WebChrome (session=\"1443383808ff5928aeeb6aef67a98a2d\")>", "_id": "BCAC004DB5008DD2E5854728548A6106_element_12", "res_log": {"screen": "C:\\Users\\Administrator\\Desktop\\AppAirtest\\result\\log\\untitled.log\\1757783722.png", "pos": [[624.0, 326.5]]}, "__class__": "Element"}, "end_time": 1757783722.5913332}}
{"tag": "function", "depth": 1, "time": 1757783724.2253313, "data": {"name": "sleep", "call_args": {"secs": 1.0}, "start_time": 1757783723.2120402, "ret": null, "end_time": 1757783724.2253313}}
{"tag": "info", "depth": 0, "time": 1757783724.2254558, "data": {"name": " ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n", "traceback": null, "log": " ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n"}}
{"tag": "function", "depth": 1, "time": 1757783724.2259622, "data": {"name": "assert_custom", "call_args": {"param": false, "logs": " ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n", "msg": "\u521b\u5efatplink-id."}, "start_time": 1757783724.2254558, "traceback": "Traceback (most recent call last):\n  File \"C:\\Program Files\\Python39\\lib\\site-packages\\airtest\\utils\\logwraper.py\", line 139, in wrapper\n    res = f(*args, **kwargs)\n  File \"C:\\Program Files\\Python39\\lib\\site-packages\\airtest_selenium\\proxy.py\", line 351, in assert_custom\n    raise AssertionError(\"Custom step execution failed. Log: \\n\\n%s\" % logs)\nAssertionError: Custom step execution failed. Log: \n\n ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n\n", "end_time": 1757783724.2259622}}
{"tag": "info", "depth": 0, "time": 1757783724.2270033, "data": {"name": "Final Error", "traceback": "Traceback (most recent call last):\n  File \"C:\\Program Files\\Python39\\lib\\site-packages\\airtest\\cli\\runner.py\", line 72, in runTest\n    exec(compile(code.encode(\"utf-8\"), pyfilepath, 'exec'), self.scope)\n  File \"C:\\Users\\Administrator\\Desktop\\AppAirtest\\case\\untitled.air\\untitled.py\", line 22, in <module>\n    driver.assert_custom(False, txt, \"\u521b\u5efatplink-id.\")\n  File \"C:\\Program Files\\Python39\\lib\\site-packages\\airtest\\utils\\logwraper.py\", line 139, in wrapper\n    res = f(*args, **kwargs)\n  File \"C:\\Program Files\\Python39\\lib\\site-packages\\airtest_selenium\\proxy.py\", line 351, in assert_custom\n    raise AssertionError(\"Custom step execution failed. Log: \\n\\n%s\" % logs)\nAssertionError: Custom step execution failed. Log: \n\n ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n  ========== \n aaaaa =========== \n\n"}}
